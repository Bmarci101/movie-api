{"ast":null,"code":"var _jsxFileName = \"/Users/AnettKeszler/Development/CC_projects/Advanced/movie-api/frontend/src/Components/DetailedPage/MovieDetail.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport './movieDetail.css';\nimport axios from 'axios';\nimport { WatchlistContext } from '../Provider/Watchlistprovider';\nexport function MovieDetail(props) {\n  const [movieDetail, setMovieDetail] = useState([[]]);\n  const [watchlist, setWatchlist] = useContext(WatchlistContext);\n  const url = `http://localhost:8080/about`;\n  const imdbId = props.match.params.imdbID;\n  const title = movieDetail.Title;\n  const year = movieDetail.Year;\n  const poster = movieDetail.Poster;\n\n  const add = () => {\n    setWatchlist(prevWatchlist => [...prevWatchlist, movieDetail]);\n    console.log(movieDetail);\n    const movie = {\n      imdbId: imdbId,\n      title: title,\n      releaseYear: year,\n      poster: poster\n    };\n    axios.post('http://localhost:8080/watchlist/1', movie).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    axios.post('http://localhost:8080/about', imdbId, {\n      headers: {\n        'Content-Type': 'text/plain'\n      }\n    }).then(response => {\n      setMovieDetail(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [imdbId, url]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, movieDetail.Title, \" (\", movieDetail.Year, \")\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"poster-text-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"poster-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"card-img\",\n    src: movieDetail === null || movieDetail === void 0 ? void 0 : movieDetail.Poster,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Runtime: \"), movieDetail.Runtime), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Genre: \"), movieDetail.Genre), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Rating: \"), movieDetail.imdbRating), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Director: \"), movieDetail.Director), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Actors: \"), movieDetail.Actors), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Awards: \"), movieDetail.Awards), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Plot: \"), movieDetail.Plot), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: add,\n    className: \"add-to-watchlist-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Add\"))));\n}\nexport default MovieDetail;","map":{"version":3,"sources":["/Users/AnettKeszler/Development/CC_projects/Advanced/movie-api/frontend/src/Components/DetailedPage/MovieDetail.js"],"names":["React","useEffect","useState","useContext","axios","WatchlistContext","MovieDetail","props","movieDetail","setMovieDetail","watchlist","setWatchlist","url","imdbId","match","params","imdbID","title","Title","year","Year","poster","Poster","add","prevWatchlist","console","log","movie","releaseYear","post","catch","error","headers","then","response","data","Runtime","Genre","imdbRating","Director","Actors","Awards","Plot"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport './movieDetail.css';\nimport axios from 'axios';\nimport { WatchlistContext } from '../Provider/Watchlistprovider';\n\nexport function MovieDetail(props) {\n  const [movieDetail, setMovieDetail] = useState([[]]);\n  const [watchlist, setWatchlist] = useContext(WatchlistContext);\n  const url = `http://localhost:8080/about`;\n  const imdbId = props.match.params.imdbID;\n  const title = movieDetail.Title;\n  const year = movieDetail.Year;\n  const poster = movieDetail.Poster;\n\n  const add = () => {\n    setWatchlist(prevWatchlist => [...prevWatchlist, movieDetail]);\n    console.log(movieDetail);\n    const movie = {\n      imdbId: imdbId,\n      title: title,\n      releaseYear: year,\n      poster: poster,\n    };\n    axios.post('http://localhost:8080/watchlist/1', movie).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    axios\n      .post('http://localhost:8080/about', imdbId, {\n        headers: { 'Content-Type': 'text/plain' },\n      })\n      .then(response => {\n        setMovieDetail(response.data);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [imdbId, url]);\n\n  return (\n    <div className='detail-container'>\n      <div className='card-title'>\n        <h2>\n          {movieDetail.Title} ({movieDetail.Year})\n        </h2>\n      </div>\n      <div className='poster-text-wrapper'>\n        <div className='poster-box'>\n          <img className='card-img' src={movieDetail?.Poster} alt='' />\n        </div>\n        <div className='text-box'>\n          <div>\n            <span>Runtime: </span>\n            {movieDetail.Runtime}\n          </div>\n          <div>\n            <span>Genre: </span>\n            {movieDetail.Genre}\n          </div>\n          <div>\n            <span>Rating: </span>\n            {movieDetail.imdbRating}\n          </div>\n          <div>\n            <span>Director: </span>\n            {movieDetail.Director}\n          </div>\n          <div>\n            <span>Actors: </span>\n            {movieDetail.Actors}\n          </div>\n          <div>\n            <span>Awards: </span>\n            {movieDetail.Awards}\n          </div>\n          <div>\n            <br></br>\n            <span>Plot: </span>\n            {movieDetail.Plot}\n          </div>\n          <button onClick={add} className='add-to-watchlist-button'>\n            Add\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieDetail;\n"]},"metadata":{},"sourceType":"module"}